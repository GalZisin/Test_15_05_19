חלק 1

1. 
1.1
Dog , Cat, Bird יורשים מ- Animal
SiamiCat  יורש מ- Cat
Buldog יורש מ- Dog
1.2
כן, כי Animal זאת מחלקה עם שם כללי ואי אפשר לדעת לאיזה סוג בעל חיים זה. ולכן לא ניתן להגדיר אותו
2. 
אי אפשר לרשת יותר ממחלקה אחת. ההורשה היא בצורה של עץ כל המחלקות יורשות מ- Object  כל מחלחקה היא משפחה ששונה זו מזו 
לדוגמא  מחלקת רהיטים,  מחלקת חיות, מחלקת ספורט וכו'
3.
כן, אפושר לרשת יותר מאינטרפייס אחד.
4.
כן, ניתן להצהיר במחלקה לא אבסטרקתית על מתודה אבסטרקטית.
5.
לא, ברגע שהמחלקה אבסטרקית לא ניתן לכתוב פונקציה לא אבסטרקית.
6.
כן, ניתן לכתוב פונקציה לא אבסטרקית באינטרפייס.
7.
המתודות באינטרפייס הם ללא access modifiers  לכן הם גם לא public.
8.
internal-  המידע יהיה נגיש בכל מקום באותו Assembly
protected- המידע יהיה נגיש רק למחלקה עצמה וליורשות שלה וגם ליורשות ב- Assemblies אחרים.
private-  מידע זה יהיה נגיש רק למחלקה עצמה.
public-  מחלקות ומידע בתוך מחלקה זאת יהיו נגישים לכולם.
9.
אם מצהירים על פונקציה כ- Virtual אין חובה לממש אותה בבנים היורשים.
לעומת זאת המחלקות היורשות חייבות לממש את הפונקציות האבסטרקטיות אחרת יהפכו בעצם לאבסטרקטים.
10.
אם כתבתי מתודה וירטואלית באבא ומימשתי בבן- זה override
אם כתבתי שתי פונקציות הזהות בשמותיהם אך שונות בפרמטרים הם Oveload.
אם כתבתי שתי פונקציות הזהות בשמותיהם ופרמטרים אך שונות בטיפוס זאת פונקציה חדשה. לא זה ולא זה.
11.
א) גם וגם אפשרי לתת ערך לשניהם בזמן הגדרה.
12.
ב) ניתן לתת ערך בבנאי רק לשדה שהוא Readonly
אי אפשר ללשנות את Const
13.
מחלקה סטטית- היא מחלקה שלא ניתן לייצר ממנה מופע או לרשת ממנה. וכל הפונקציות והמשתנים בתוך המחלקה חייבים לםהיות סטיים.
מחלקה סטטית לא יכולה להכיל אובייקטים.
מחלקה לא סטטית המכילה שדות סטטים ומתודות סטטים- אפשר לראות אותו כמחלקה שמחולקת לשני מחלקו סטטי ולא סטטי וישנה הפרדה םבין השניים.
ולאובייקט שנוצר במחלקה הזאת לא תיהיה גישה לפונקציות והשדות הסטטיים. ולפונקציות הסטטיות לא תיהיה גישה למידע ולפונקציות הלא סטטיים.
14.
הבנאי  שנקרא  כאשר  התכנית מתחילה לרוץ. בנאי סטטי לא יכול לקבל פרמטרים.
תפקידו רק לאתחל את השדות של המחלקה.

חלק2

חלק3

1.
 stored procedure - פונקציה בתוך SQL שיכולה לקבל פרמטרים ולהשתמש בהם לצוך יצירת שאילתא.
כדי להשתמש כי הפונקציות מיוצרות ישירות בתוך MMSQL יותר קצפרות ונוחות.
2.
כדי להשתמש בקובץ App.config לצופרך איחסון connection string כדי שלקוח יוכל לקבל ףאת קובץ הקונפיג ולשנות  בעצמו את הנתיב להתחברות בלי לגעת בתוכנית עצמה.
3.
ב) SQLITE
4.
ב)FIREBASE   שהוא בסיס נתונים NOSQL
5.
א)MSSQL
6.
ב)FIREBASE
7.
1:1 - לכל לקוח יש הזמנה אחת 
n:1 - לקוח אחד שיש לו הרבה הזמנות
n:m - לכל לקוח יכולים להיות כמה מוצרים ולכל מוצר יכולים להיות כמה לקוחות
8.
9.
10.
11.
12.
13.
מטרת הPOCO היא לשמור את הנתונים שמגיעים מהבסיס נתונים ולהשתמש בהם. כדאי לממש  Equals, GetHashCode במחלקה כדי לעשות השוואות בין הנתונים לכל אחד יש
HashCode יחודי אם לא לדרוס את ה== ו- ==! ההשוואה תתבצע לפי הכתובת שבה נמצא הנתון ולא לפי הערך שלו. 
14.
מטרת מחלקת DAO בפרוייקט המכיל בסיסי נתונים היא לתקשר עם הבסיס הנתונים ולא הגיוני להדפיס למסך במחלקה זאת ניתן לקרוא לפונקציות במחלה זאת מה -
Main ומשם להדפיס. 

חלק 4



 





  